{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","onClick","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAlBS,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI1Ca,QAAQC,IAAKR,GAbM,kBAcZA,GAdY,4CAAH,sDCEPS,EAAc,SAAC,GAAqB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,mCAAMA,EAAN,WCFCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAO,GACPe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAEN1B,EAASC,GACJ0B,MAAM,SAAAhB,GACHc,EAAS,CACLjB,KAAMG,EACNY,SAAS,SAItB,CAAEtB,IAEEuB,EDf2BI,CAAc3B,GAAnCa,EAAb,EAAQN,KAAce,EAAtB,EAAsBA,QAItB,OACI,qCACI,qBAAIJ,UAAU,uCAAd,cAAwDlB,EAAxD,OAEEsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SACI,6BAEQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADEA,EAAIC,eEevBiB,MAjCf,WAGI,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCACI,gDAEA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,wBAAQ6C,QAZE,WAEd7C,GAAe,SAAAS,GAAG,4BAAQA,GAAR,CAAa,eAU3B,6BAEA,6BAEQmC,EAAWpB,KAAK,SAAAf,GAAG,OACf,cAAC,EAAD,CAEAM,SAAWN,GADLA,Y,MCtB9BqC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.804710ce.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories(cat => [inputValue, ...cat,]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit } >\r\n            <input\r\n                type=\"text\"\r\n                value= { inputValue } \r\n                onChange= { handleChange }\r\n            />  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : propTypes.func.isRequired\r\n};\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=9GqwokwHX0p9JnfUhUPj3mEfr1FoYk9Y`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return  {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    console.log( gifs );\r\n    return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title }></img>\r\n            <p>  {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState }  from 'react'\r\nimport { useFetchGifs } from \"../../src/hooks/useFetchGifs\";\r\n//import { getGifs } from '../helpers/GetGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images , loading } = useFetchGifs( category );\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__headShake\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__pulse\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                <ol>\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem\r\n                            key={ img.id }\r\n                            {...img}/>\r\n                            ))\r\n                        }\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n            .then( img => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nfunction GifExpertApp() {\r\n\r\n    //const categories = ['Jujutsu', 'Love is War', 'Nagatoro'];\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    const handleAdd = () => {\r\n        //setCategories( [...categories, 'Naruto'] ); //una forma es el spread operator \r\n        setCategories( cat => [...cat, 'Naruto'] ); //la otra es con un callback\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr></hr>\r\n\r\n            <button onClick={ handleAdd }> Agregar anime </button>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( cat => (\r\n                        <GifGrid \r\n                        key={ cat }\r\n                        category={ cat }/>\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}